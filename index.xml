<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Bevan Philip</title>
    <link>https://bphilip.uk/</link>
    <description>Recent content in Home on Bevan Philip</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Tue, 12 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://bphilip.uk/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>NA CS is dead, but maybe it was always going to be</title>
      <link>https://bphilip.uk/blog/2023-09-12-na-cs-is-dead-but-maybe/</link>
      <pubDate>Tue, 12 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/blog/2023-09-12-na-cs-is-dead-but-maybe/</guid>
      <description>North American Counter-Strike is dead, or in the middle of dying.
Team Liquid, the prototypical NA team, now fields a primarily European roster, while Cloud9&amp;rsquo;s roster is Russian. The remaining stalwarts in Complexity and EG are not competitive internationally.
This isn&amp;rsquo;t unique to North America. This death of the national team is framed as a problem endemic to North America. But one only needs to look in Europe to see that the concept as a whole, is withering away.</description>
    </item>
    
    <item>
      <title>What Makes a CS:GO Major Playoff Stand Out?</title>
      <link>https://bphilip.uk/blog/2023-05-30-what-makes-a-major-standout/</link>
      <pubDate>Tue, 30 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/blog/2023-05-30-what-makes-a-major-standout/</guid>
      <description>CS:GO Majors are supposed to be a raucous celebration of the game. The place where the best teams duke it out, in a desperate bid to establish themselves as the apex predator. There is no such as a free round within this theatre.
Yet Boston 2018 was the last CS:GO major final to ever reach 3 maps.
7 consecutive major finals, where the loser could not muster one map.
What is going on?</description>
    </item>
    
    <item>
      <title>Have CS rounds gotten slower?</title>
      <link>https://bphilip.uk/blog/2023-04-26-have-cs-rounds-gotten-slower/</link>
      <pubDate>Wed, 26 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/blog/2023-04-26-have-cs-rounds-gotten-slower/</guid>
      <description>Counter-Strike events seem to have less energy than ever. There are no concrete statistics to back this up, but the symphonies of Counter-Strike sound more like a small chorale. The crowds have gone from ecstasy, to gentle applause.
If this is the case, pointing to a single cause is difficult. To list a few changes:
The makeup of teams has changed, with fan favourites such as NiP, SK and fnatic having all disappeared from the high levels of the scene.</description>
    </item>
    
    <item>
      <title>404 Not Found</title>
      <link>https://bphilip.uk/404.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/404.html</guid>
      <description>This page could not be found. Use the navigation to get back to where you want to be.</description>
    </item>
    
    <item>
      <title>Bo Tree</title>
      <link>https://bphilip.uk/projects/botree/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/projects/botree/</guid>
      <description>Bo Tree is an Android meditation app I built for a university module (earning 95%). Having never done Android development prior, I chose to enter in the deep end by building an app with Kotlin, the Room Abstraction API and LiveViews.
Although building an app to learn something does usually result in something slightly messy, other than in extreme workloads, the app works as expected, which was more than I expected for an initial attempt.</description>
    </item>
    
    <item>
      <title>bphilip.uk</title>
      <link>https://bphilip.uk/projects/bphilip/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/projects/bphilip/</guid>
      <description>Problem: This website was originally designed in 2020. I wrote about the rapid change in the JavaScript ecosystem, and that change only continues.
Originally, this was built with Jekyll as the static site generator, Tailwind as the CSS framework, and Webpack as the bundler. Each seemed like an obvious choice at the time. While it all worked together at the time, it aged rather poorly, as it was already suffering from dependency hell, which would only become worse.</description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://bphilip.uk/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/credits/</guid>
      <description>Just Waves This site uses Just Waves from the Toptal Subtle Patterns library.
Spikes This site uses Spikes from the Toptal Subtle Patterns library.
Tailwind CSS https://github.com/tailwindlabs/tailwindcss
MIT License
Copyright (c) Tailwind Labs, Inc.
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the &amp;ldquo;Software&amp;rdquo;), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</description>
    </item>
    
    <item>
      <title>telenamer</title>
      <link>https://bphilip.uk/projects/telenamer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://bphilip.uk/projects/telenamer/</guid>
      <description>telenamer was an attempt to both learn Go, and to improve an earlier app that performed the same task. It works by pulling information from the file name, sending it to the TVDB API, and using the information retrieved to create a better filename.
telenamer improved on the previous app by being
far easier to distribute (instead of having to work with the awkward Python distribution ecosystem, I could just build an executable) far quicker due to use of Goroutines better tested due to unit testing less brittle by leveraging a library to get information from the file name, instead of using very brittle regex (the library itself does use regex, but far better tested regex).</description>
    </item>
    
  </channel>
</rss>
